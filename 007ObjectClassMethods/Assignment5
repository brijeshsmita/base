1>Create a hierarchy of abstract class Trainee 
with private variables :
	>id
	>name
	>coName
and abstract methods as : 
	>attendTrainee()
	>doAssignments()
	>writeTest()
and non abstract methods as :
	>getters and setters
	>toString method
Trainee abstract class is extended by :-  
1. JavaTrainee  2. DotNetTrainee  3.OracleTrainee 

JavaTrainee class has following methods :- 
	1.presentation()
	2.caseStudy()
	3.projectEMS()

DotNetTraineeTrainee class :-
	1. wCFProject()
	2. wPFProject()

OracleTrainee class :-
	1. rdbms()
	2.project() 

2> create an interface EmployeeService
	public Employee findById(int empId);
	public Employee findByName(String ename);
	public Employee [] findAllEmployees();	
 -> create a class EmployeeServiceImpl which implements
 	EmployeeService interface 
 	-in findById() method throw User Defined Exception
 	if employee not found
 	-in findByName() method throw User Defined Exception
 	if employee not found
3> create a class WrapperDemo 
 	-Accept age in String var from user 
 	and try to convert in Integer
 	-Accept salary as double and now convert it in String
