Executors framework (java.util.concurrent.Executor), 
released with the JDK 5 in package java.util.concurrent 
is used to run the Runnable objects without creating 
new threads every time 
and mostly re-using the already created threads.


We all know about that there are two ways to create a thread in java. 
 Creating a thread in java is a very expensive process
 which includes memory overhead also. 
 So, it’s a good idea if we can re-use these threads once created,
 to run our future runnables.
 
 In our demo application, we have two tasks running. 
 Neither is expected to terminate, 
 and both should run for the duration of the application’s life. 
 I will try to write a main wrapper class such that:

If any task throws an exception, the application will catch it 
and restart the task.
If any task runs to completion, 
the application will notice and restart the task.